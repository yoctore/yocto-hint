# http://eslint.org/docs/rules/
env:
  node : true
rules:
  # Possible Errors
  no-await-in-loop: 0
  no-compare-neg-zero: 2
  no-cond-assign: 2
  no-console: 0
  no-constant-condition: 2
  no-control-regex: 2
  no-debugger: 2
  no-dupe-args: 2
  no-dupe-keys: 2
  no-duplicate-case: 2
  no-empty: 2
  no-empty-character-class: 2
  no-ex-assign: 2
  no-extra-boolean-cast: 2
  no-extra-parens: [ 2, "all", { "conditionalAssign": false } ]
  no-extra-semi: 2
  no-func-assign: 2
  no-inner-declarations: [ 2, functions ]
  no-invalid-regexp: 2
  no-irregular-whitespace: 2
  no-obj-calls: 2
  no-prototype-builtins: 2
  no-regex-spaces: 2
  no-sparse-arrays: 2
  no-template-curly-in-string: 0
  no-unexpected-multiline: 2
  no-unreachable: 2
  no-unsafe-finally: 2
  no-unsafe-negation: 2
  use-isnan: 2
  valid-jsdoc: 2
  valid-typeof: 2
  # Best Pratices
  accessor-pairs: 2
  array-callback-return: 2
  block-scoped-var: 2
  class-methods-use-this: 1
  complexity: [ 2, 15 ]
  consistent-return: 1
  curly: 0
  default-case: 0
  dot-location: 0
  dot-notation: 0
  eqeqeq: 2
  guard-for-in: 1
  no-alert: 2
  no-caller: 2
  no-case-declarations: 2
  no-div-regex: 2
  no-else-return: 2 
  no-empty-function: 2
  no-empty-pattern: 2
  no-eq-null: 2
  no-eval: 2
  no-extend-native: 2
  no-extra-bind: 2
  no-extra-label: 0
  no-fallthrough: 2
  no-floating-decimal: 2
  no-global-assign: 2
  no-implicit-coercion: [ 2, { "allow": ["!!", "~"] } ]
  no-implicit-globals: 0
  no-implied-eval: 2
  no-invalid-this: 0
  no-iterator: 2
  no-labels: 2
  no-lone-blocks: 2
  no-loop-func: 2
  no-magic-numbers: 0
  no-multi-spaces: [ 2, { "exceptions": { "ImportDeclaration": true, "VariableDeclarator": true } } ]
  no-multi-str: 2
  no-new:  2
  no-new-func: 2
  no-new-wrappers: 2
  no-octal: 2
  no-octal-escape: 2
  no-param-reassign: 0
  no-proto: 2
  no-redeclare: 2
  no-restricted-properties: 0
  no-return-assign: [ 2, "except-parens" ]
  no-return-await: 2
  no-script-url: 2
  no-self-assign: 2
  no-self-compare: 2
  no-sequences: 2
  no-throw-literal: 2
  no-unmodified-loop-condition: 0
  no-unused-expressions: 2
  no-unused-labels: 2
  no-useless-call: 2
  no-useless-concat: 2
  no-useless-escape: 2
  no-useless-return: 2
  no-void: 2
  no-warning-comments: 0
  no-with: 2
  prefer-promise-reject-errors: 2
  radix: 2
  require-await: 0
  vars-on-top: 0
  wrap-iife: 2
  yoda: 2
  # Strict mode
  strict: [ 2, "safe" ] 
  # Variables
  init-declarations: 0
  no-catch-shadow: 2
  no-delete-var: 2
  no-label-var: 2
  no-restricted-globals: 0
  no-shadow: 0
  no-shadow-restricted-names: 2
  no-undef: 0
  no-undef-init: 2
  no-undefined: 2
  no-unused-vars: 2
  no-use-before-define: 2
  # Node JS & Common JS
  callback-return: 2
  global-require: 2
  handle-callback-err: 2
  no-mixed-requires: 0
  no-new-require: 2
  no-path-concat: 2
  no-process-exit: 2
  no-restricted-modules: 0
  no-sync: 0
  # Stylistic Issues
  array-bracket-spacing: [ 2, "always" ]
  block-spacing: [ 2, "always" ]
  brace-style: [ 2, "1tbs", { "allowSingleLine" : true } ]
  camelcase: [ 2, { properties : "never" } ]
  capitalized-comments: [ 1, "always", { "ignoreConsecutiveComments" : true, "ignoreInlineComments" : true } ]
  comma-dangle: 2
  comma-spacing: 0
  comma-style: 0
  computed-property-spacing: [ 2, "never" ]
  consistent-this: 0
  eol-last: [ 2, "always" ]
  func-call-spacing: [ 2, "never" ]
  func-name-matching: 0
  func-names: 0
  func-style: 0
  id-blacklist: 0
  id-length: [ 2, { min : 1 } ]
  id-match: 0
  indent: [ 2, 2 ]
  jsx-quotes: [2 , "prefer-double" ]
  key-spacing: [ 2, { "beforeColon" : true, "afterColon" : true, "align" : "colon" } ]
  keyword-spacing: [ 2, { "before" : true, "after" : true } ]
  line-comment-position: [ 2, { "position": "above" } ]
  linebreak-style: [ 2, "unix" ]
  lines-around-comment: [ 2, { "beforeBlockComment": true, "afterBlockComment": false, "beforeLineComment": true, "afterLineComment": false, "allowBlockStart": true, "allowBlockEnd": true, "allowObjectStart": true, "allowObjectEnd": true, "allowArrayStart": true, "allowArrayEnd": true } ]
  lines-around-directive: [ 2, "always" ]
  max-depth: [ 2, { "max" : 4 } ]
  max-len: [ 2, 100, 4, { "ignoreComments": true, "ignoreTrailingComments": true, "ignoreUrls": true, "ignoreStrings": true, "ignoreTemplateLiterals": true } ]
  max-lines: [ 2, { "max" : 3000, "skipBlankLines": true, "skipComments": true } ]
  max-nested-callbacks: [ 2, { "max" : 5 } ]
  max-params: [ 2, { "max" : 8 } ]
  max-statements: [2, { "max": 30 }, { "ignoreTopLevelFunctions": true } ]
  max-statements-per-line: [ 2, { "max" : 1 } ]
  multiline-ternary: off
  new-cap: [ 2, { "newIsCap": true, "capIsNew": true, "properties": false } ]
  new-parens: 2
  newline-after-var: [ 2, "always" ]
  newline-before-return: 2
  newline-per-chained-call: 2
  no-array-constructor: 2
  no-bitwise: 2
  no-continue: 2
  no-inline-comments: 2
  no-lonely-if: 2
  no-mixed-operators: 2
  no-mixed-spaces-and-tabs: 2
  no-multi-assign: 2
  no-multiple-empty-lines: [ 1, { "max" : 2, "maxBOF" : 1} ]
  no-negated-condition: 2
  no-nested-ternary: 2
  no-new-object: 1
  no-plusplus: 0
  no-restricted-syntax: 0
  no-tabs: 2
  no-ternary: 0
  no-trailing-spaces: 1
  no-underscore-dangle: [ 2, { "allowAfterThis": true, "allowAfterSuper": true } ]
  no-unneeded-ternary: 2
  no-whitespace-before-property: 2
  nonblock-statement-body-position: [ 2, "below" ]
  object-curly-newline: [ 2, { "multiline" : true, "minProperties" : 1 } ]
  object-curly-spacing: [ 2, "always" ]
  object-property-newline: 2
  one-var: [ 2, "never" ]
  one-var-declaration-per-line: [ 2, "always" ]
  operator-assignment: [ 2, "always" ]
  operator-linebreak: [ 2, "after" ]
  padded-blocks: [ 2, "never" ]
  quote-props: [ 2, "as-needed" ]
  quotes: [ 2, "single" ]
  require-jsdoc: [ 2, { "require": { "FunctionDeclaration": true, "MethodDefinition": true, "ClassDeclaration": true } } ]
  semi: 0
  semi-spacing: [ 2, { "before" : false, "after": true } ]
  sort-keys: [ 1, "asc", { "caseSensitive" : true, "natural" : false } ]
  sort-vars: 0
  space-before-blocks: [ 2, "always" ]
  space-before-function-paren: [ 2, "always" ]
  space-in-parens: [ 2, "never" ]
  space-infix-ops: 0
  space-unary-ops: [ 2, {"words" : true, "nonwords" : false} ]
  spaced-comment: [ 2, "always" ]
  template-tag-spacing: [ 2, "always" ]
  unicode-bom: [ 2, "never" ]
  wrap-regex: 0